{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hamma\\\\Desktop\\\\CS4485\\\\Prediction\\\\WeatherForecastWebApp\\\\frontend\\\\src\\\\components\\\\ForecastTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TablePagination, Box, Typography, tableCellClasses, styled } from '@mui/material';\nimport { format, parseISO } from 'date-fns';\n\n// Styled components for better table appearance\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTableCell = styled(TableCell)(({\n  theme\n}) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.common.white,\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 15\n  }\n}));\n_c = StyledTableCell;\nconst StyledTableRow = styled(TableRow)(({\n  theme\n}) => ({\n  '&:nth-of-type(odd)': {\n    backgroundColor: theme.palette.action.hover\n  },\n  // hide last border\n  '&:last-child td, &:last-child th': {\n    border: 0\n  },\n  '&:hover': {\n    backgroundColor: 'rgba(33, 150, 243, 0.08)',\n    cursor: 'pointer'\n  }\n}));\n_c2 = StyledTableRow;\nconst ForecastTable = ({\n  data\n}) => {\n  _s();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3,\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        color: \"text.secondary\",\n        children: \"No forecast data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  // Format the date from ISO string to a readable format\n  const formatDate = dateString => {\n    try {\n      return format(parseISO(dateString), 'MMM dd, yyyy (EEE)');\n    } catch (error) {\n      return dateString;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      sx: {\n        maxHeight: 440,\n        boxShadow: 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"forecast table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"right\",\n              children: \"Max Temp (\\xB0F)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"right\",\n              children: \"Min Temp (\\xB0F)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"right\",\n              children: \"Range (\\xB0F)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n            const tempRange = row.predicted_tmax - row.predicted_tmin;\n            return /*#__PURE__*/_jsxDEV(StyledTableRow, {\n              children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: formatDate(row.date)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"right\",\n                children: row.predicted_tmax.toFixed(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"right\",\n                children: row.predicted_tmin.toFixed(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"right\",\n                children: tempRange.toFixed(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [10, 25, 50],\n      component: \"div\",\n      count: data.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(ForecastTable, \"65nbIEELuFY2eeUXbED/8VsHrEQ=\");\n_c3 = ForecastTable;\nexport default ForecastTable;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StyledTableCell\");\n$RefreshReg$(_c2, \"StyledTableRow\");\n$RefreshReg$(_c3, \"ForecastTable\");","map":{"version":3,"names":["React","useState","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TablePagination","Box","Typography","tableCellClasses","styled","format","parseISO","jsxDEV","_jsxDEV","StyledTableCell","theme","head","backgroundColor","palette","primary","main","color","common","white","fontWeight","fontSize","body","_c","StyledTableRow","action","hover","border","cursor","_c2","ForecastTable","data","_s","page","setPage","rowsPerPage","setRowsPerPage","length","sx","p","textAlign","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","formatDate","dateString","error","width","overflow","component","maxHeight","boxShadow","stickyHeader","align","slice","map","row","index","tempRange","predicted_tmax","predicted_tmin","scope","date","toFixed","rowsPerPageOptions","count","onPageChange","onRowsPerPageChange","_c3","$RefreshReg$"],"sources":["C:/Users/hamma/Desktop/CS4485/Prediction/WeatherForecastWebApp/frontend/src/components/ForecastTable.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  TablePagination,\n  Box,\n  Typography,\n  tableCellClasses,\n  styled\n} from '@mui/material';\nimport { format, parseISO } from 'date-fns';\n\n// Styled components for better table appearance\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.common.white,\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 15,\n  },\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  '&:nth-of-type(odd)': {\n    backgroundColor: theme.palette.action.hover,\n  },\n  // hide last border\n  '&:last-child td, &:last-child th': {\n    border: 0,\n  },\n  '&:hover': {\n    backgroundColor: 'rgba(33, 150, 243, 0.08)',\n    cursor: 'pointer',\n  }\n}));\n\nconst ForecastTable = ({ data }) => {\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  if (!data || data.length === 0) {\n    return (\n      <Box sx={{ p: 3, textAlign: 'center' }}>\n        <Typography variant=\"subtitle1\" color=\"text.secondary\">\n          No forecast data available\n        </Typography>\n      </Box>\n    );\n  }\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  // Format the date from ISO string to a readable format\n  const formatDate = (dateString) => {\n    try {\n      return format(parseISO(dateString), 'MMM dd, yyyy (EEE)');\n    } catch (error) {\n      return dateString;\n    }\n  };\n\n  return (\n    <Box sx={{ width: '100%', overflow: 'hidden' }}>\n      <TableContainer component={Paper} sx={{ maxHeight: 440, boxShadow: 'none' }}>\n        <Table stickyHeader aria-label=\"forecast table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>Date</StyledTableCell>\n              <StyledTableCell align=\"right\">Max Temp (°F)</StyledTableCell>\n              <StyledTableCell align=\"right\">Min Temp (°F)</StyledTableCell>\n              <StyledTableCell align=\"right\">Range (°F)</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row, index) => {\n                const tempRange = row.predicted_tmax - row.predicted_tmin;\n                \n                return (\n                  <StyledTableRow key={index}>\n                    <StyledTableCell component=\"th\" scope=\"row\">\n                      {formatDate(row.date)}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"right\">{row.predicted_tmax.toFixed(1)}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{row.predicted_tmin.toFixed(1)}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{tempRange.toFixed(1)}</StyledTableCell>\n                  </StyledTableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 50]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </Box>\n  );\n};\n\nexport default ForecastTable;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,KAAK,EACLC,SAAS,EACTC,SAAS,EACTC,cAAc,EACdC,SAAS,EACTC,QAAQ,EACRC,KAAK,EACLC,eAAe,EACfC,GAAG,EACHC,UAAU,EACVC,gBAAgB,EAChBC,MAAM,QACD,eAAe;AACtB,SAASC,MAAM,EAAEC,QAAQ,QAAQ,UAAU;;AAE3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,GAAGL,MAAM,CAACT,SAAS,CAAC,CAAC,CAAC;EAAEe;AAAM,CAAC,MAAM;EACxD,CAAC,KAAKP,gBAAgB,CAACQ,IAAI,EAAE,GAAG;IAC9BC,eAAe,EAAEF,KAAK,CAACG,OAAO,CAACC,OAAO,CAACC,IAAI;IAC3CC,KAAK,EAAEN,KAAK,CAACG,OAAO,CAACI,MAAM,CAACC,KAAK;IACjCC,UAAU,EAAE,MAAM;IAClBC,QAAQ,EAAE;EACZ,CAAC;EACD,CAAC,KAAKjB,gBAAgB,CAACkB,IAAI,EAAE,GAAG;IAC9BD,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC,CAAC;AAACE,EAAA,GAVEb,eAAe;AAYrB,MAAMc,cAAc,GAAGnB,MAAM,CAACN,QAAQ,CAAC,CAAC,CAAC;EAAEY;AAAM,CAAC,MAAM;EACtD,oBAAoB,EAAE;IACpBE,eAAe,EAAEF,KAAK,CAACG,OAAO,CAACW,MAAM,CAACC;EACxC,CAAC;EACD;EACA,kCAAkC,EAAE;IAClCC,MAAM,EAAE;EACV,CAAC;EACD,SAAS,EAAE;IACTd,eAAe,EAAE,0BAA0B;IAC3Ce,MAAM,EAAE;EACV;AACF,CAAC,CAAC,CAAC;AAACC,GAAA,GAZEL,cAAc;AAcpB,MAAMM,aAAa,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGzC,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAAC0C,WAAW,EAAEC,cAAc,CAAC,GAAG3C,QAAQ,CAAC,EAAE,CAAC;EAElD,IAAI,CAACsC,IAAI,IAAIA,IAAI,CAACM,MAAM,KAAK,CAAC,EAAE;IAC9B,oBACE5B,OAAA,CAACP,GAAG;MAACoC,EAAE,EAAE;QAAEC,CAAC,EAAE,CAAC;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAC,QAAA,eACrChC,OAAA,CAACN,UAAU;QAACuC,OAAO,EAAC,WAAW;QAACzB,KAAK,EAAC,gBAAgB;QAAAwB,QAAA,EAAC;MAEvD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAEV;EAEA,MAAMC,gBAAgB,GAAGA,CAACC,KAAK,EAAEC,OAAO,KAAK;IAC3Cf,OAAO,CAACe,OAAO,CAAC;EAClB,CAAC;EAED,MAAMC,uBAAuB,GAAIF,KAAK,IAAK;IACzCZ,cAAc,CAACe,QAAQ,CAACH,KAAK,CAACI,MAAM,CAACC,KAAK,EAAE,EAAE,CAAC,CAAC;IAChDnB,OAAO,CAAC,CAAC,CAAC;EACZ,CAAC;;EAED;EACA,MAAMoB,UAAU,GAAIC,UAAU,IAAK;IACjC,IAAI;MACF,OAAOjD,MAAM,CAACC,QAAQ,CAACgD,UAAU,CAAC,EAAE,oBAAoB,CAAC;IAC3D,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,OAAOD,UAAU;IACnB;EACF,CAAC;EAED,oBACE9C,OAAA,CAACP,GAAG;IAACoC,EAAE,EAAE;MAAEmB,KAAK,EAAE,MAAM;MAAEC,QAAQ,EAAE;IAAS,CAAE;IAAAjB,QAAA,gBAC7ChC,OAAA,CAACZ,cAAc;MAAC8D,SAAS,EAAE3D,KAAM;MAACsC,EAAE,EAAE;QAAEsB,SAAS,EAAE,GAAG;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAApB,QAAA,eAC1EhC,OAAA,CAACf,KAAK;QAACoE,YAAY;QAAC,cAAW,gBAAgB;QAAArB,QAAA,gBAC7ChC,OAAA,CAACX,SAAS;UAAA2C,QAAA,eACRhC,OAAA,CAACV,QAAQ;YAAA0C,QAAA,gBACPhC,OAAA,CAACC,eAAe;cAAA+B,QAAA,EAAC;YAAI;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAiB,CAAC,eACvCrC,OAAA,CAACC,eAAe;cAACqD,KAAK,EAAC,OAAO;cAAAtB,QAAA,EAAC;YAAa;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAiB,CAAC,eAC9DrC,OAAA,CAACC,eAAe;cAACqD,KAAK,EAAC,OAAO;cAAAtB,QAAA,EAAC;YAAa;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAiB,CAAC,eAC9DrC,OAAA,CAACC,eAAe;cAACqD,KAAK,EAAC,OAAO;cAAAtB,QAAA,EAAC;YAAU;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAiB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACZrC,OAAA,CAACd,SAAS;UAAA8C,QAAA,EACPV,IAAI,CACFiC,KAAK,CAAC/B,IAAI,GAAGE,WAAW,EAAEF,IAAI,GAAGE,WAAW,GAAGA,WAAW,CAAC,CAC3D8B,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;YACnB,MAAMC,SAAS,GAAGF,GAAG,CAACG,cAAc,GAAGH,GAAG,CAACI,cAAc;YAEzD,oBACE7D,OAAA,CAACe,cAAc;cAAAiB,QAAA,gBACbhC,OAAA,CAACC,eAAe;gBAACiD,SAAS,EAAC,IAAI;gBAACY,KAAK,EAAC,KAAK;gBAAA9B,QAAA,EACxCa,UAAU,CAACY,GAAG,CAACM,IAAI;cAAC;gBAAA7B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC,eAClBrC,OAAA,CAACC,eAAe;gBAACqD,KAAK,EAAC,OAAO;gBAAAtB,QAAA,EAAEyB,GAAG,CAACG,cAAc,CAACI,OAAO,CAAC,CAAC;cAAC;gBAAA9B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAkB,CAAC,eAChFrC,OAAA,CAACC,eAAe;gBAACqD,KAAK,EAAC,OAAO;gBAAAtB,QAAA,EAAEyB,GAAG,CAACI,cAAc,CAACG,OAAO,CAAC,CAAC;cAAC;gBAAA9B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAkB,CAAC,eAChFrC,OAAA,CAACC,eAAe;gBAACqD,KAAK,EAAC,OAAO;gBAAAtB,QAAA,EAAE2B,SAAS,CAACK,OAAO,CAAC,CAAC;cAAC;gBAAA9B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAkB,CAAC;YAAA,GANpDqB,KAAK;cAAAxB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAOV,CAAC;UAErB,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC,eACjBrC,OAAA,CAACR,eAAe;MACdyE,kBAAkB,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE;MACjCf,SAAS,EAAC,KAAK;MACfgB,KAAK,EAAE5C,IAAI,CAACM,MAAO;MACnBF,WAAW,EAAEA,WAAY;MACzBF,IAAI,EAAEA,IAAK;MACX2C,YAAY,EAAE7B,gBAAiB;MAC/B8B,mBAAmB,EAAE3B;IAAwB;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACd,EAAA,CA3EIF,aAAa;AAAAgD,GAAA,GAAbhD,aAAa;AA6EnB,eAAeA,aAAa;AAAC,IAAAP,EAAA,EAAAM,GAAA,EAAAiD,GAAA;AAAAC,YAAA,CAAAxD,EAAA;AAAAwD,YAAA,CAAAlD,GAAA;AAAAkD,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}