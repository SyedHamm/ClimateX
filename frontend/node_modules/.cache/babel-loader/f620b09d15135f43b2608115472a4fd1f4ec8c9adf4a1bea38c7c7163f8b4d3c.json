{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hamma\\\\Desktop\\\\Github Projects\\\\ClimateX\\\\frontend\\\\src\\\\components\\\\R2LearningCurveChart.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\nimport { Box, Typography, useTheme } from '@mui/material';\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\nconst R2LearningCurveChart = ({\n  maxData,\n  minData,\n  title\n}) => {\n  _s();\n  const theme = useTheme();\n  if (!maxData || !minData || !maxData.train_sizes || !minData.train_sizes) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No R\\xB2 learning curve data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Format training sizes as percentages for display\n  const labels = maxData.train_sizes.map(size => `${Math.round(size * 100)}%`);\n\n  // Prepare chart data\n  const chartData = {\n    labels,\n    datasets: [{\n      label: 'Max Temperature Model',\n      data: maxData.r2_scores,\n      borderColor: 'rgba(255, 99, 132, 1)',\n      backgroundColor: 'rgba(255, 99, 132, 0.2)',\n      pointBackgroundColor: 'rgba(255, 99, 132, 1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(255, 99, 132, 1)',\n      tension: 0.3,\n      fill: false\n    }, {\n      label: 'Min Temperature Model',\n      data: minData.r2_scores,\n      borderColor: 'rgba(54, 162, 235, 1)',\n      backgroundColor: 'rgba(54, 162, 235, 0.2)',\n      pointBackgroundColor: 'rgba(54, 162, 235, 1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(54, 162, 235, 1)',\n      tension: 0.3,\n      fill: false\n    }]\n  };\n\n  // Chart options\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            return `${context.dataset.label}: R² = ${context.raw.toFixed(3)}`;\n          }\n        }\n      },\n      title: {\n        display: title ? true : false,\n        text: title || 'R² Learning Curve',\n        font: {\n          size: 16\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        max: 1,\n        title: {\n          display: true,\n          text: 'R² Score'\n        },\n        ticks: {\n          callback: function (value) {\n            return value.toFixed(2);\n          }\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Training Data Size'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: '100%',\n      width: '100%',\n      p: 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"text.secondary\",\n      sx: {\n        mb: 2\n      },\n      children: \"This chart shows how the model's R\\xB2 score improves as more training data is used. Higher R\\xB2 values indicate better predictive performance.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        height: 350\n      },\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(R2LearningCurveChart, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n_c = R2LearningCurveChart;\nexport default R2LearningCurveChart;\nvar _c;\n$RefreshReg$(_c, \"R2LearningCurveChart\");","map":{"version":3,"names":["React","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","Box","Typography","useTheme","jsxDEV","_jsxDEV","register","R2LearningCurveChart","maxData","minData","title","_s","theme","train_sizes","children","fileName","_jsxFileName","lineNumber","columnNumber","labels","map","size","Math","round","chartData","datasets","label","data","r2_scores","borderColor","backgroundColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","tension","fill","options","responsive","maintainAspectRatio","plugins","legend","position","tooltip","callbacks","context","dataset","raw","toFixed","display","text","font","scales","y","beginAtZero","max","ticks","callback","value","x","sx","height","width","p","variant","color","mb","_c","$RefreshReg$"],"sources":["C:/Users/hamma/Desktop/Github Projects/ClimateX/frontend/src/components/R2LearningCurveChart.js"],"sourcesContent":["import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { \n  Chart as ChartJS, \n  CategoryScale, \n  LinearScale, \n  PointElement, \n  LineElement, \n  Title, \n  Tooltip, \n  Legend,\n  Filler\n} from 'chart.js';\nimport { Box, Typography, useTheme } from '@mui/material';\n\n// Register Chart.js components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\nconst R2LearningCurveChart = ({ maxData, minData, title }) => {\n  const theme = useTheme();\n  \n  if (!maxData || !minData || !maxData.train_sizes || !minData.train_sizes) {\n    return <div>No R² learning curve data available</div>;\n  }\n\n  // Format training sizes as percentages for display\n  const labels = maxData.train_sizes.map(size => `${Math.round(size * 100)}%`);\n  \n  // Prepare chart data\n  const chartData = {\n    labels,\n    datasets: [\n      {\n        label: 'Max Temperature Model',\n        data: maxData.r2_scores,\n        borderColor: 'rgba(255, 99, 132, 1)',\n        backgroundColor: 'rgba(255, 99, 132, 0.2)',\n        pointBackgroundColor: 'rgba(255, 99, 132, 1)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(255, 99, 132, 1)',\n        tension: 0.3,\n        fill: false\n      },\n      {\n        label: 'Min Temperature Model',\n        data: minData.r2_scores,\n        borderColor: 'rgba(54, 162, 235, 1)',\n        backgroundColor: 'rgba(54, 162, 235, 0.2)',\n        pointBackgroundColor: 'rgba(54, 162, 235, 1)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(54, 162, 235, 1)',\n        tension: 0.3,\n        fill: false\n      }\n    ]\n  };\n\n  // Chart options\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      tooltip: {\n        callbacks: {\n          label: function(context) {\n            return `${context.dataset.label}: R² = ${context.raw.toFixed(3)}`;\n          }\n        }\n      },\n      title: {\n        display: title ? true : false,\n        text: title || 'R² Learning Curve',\n        font: {\n          size: 16\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        max: 1,\n        title: {\n          display: true,\n          text: 'R² Score',\n        },\n        ticks: {\n          callback: function(value) {\n            return value.toFixed(2);\n          }\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Training Data Size',\n        }\n      }\n    }\n  };\n\n  return (\n    <Box sx={{ height: '100%', width: '100%', p: 1 }}>\n      <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n        This chart shows how the model's R² score improves as more training data is used. Higher R² values indicate better predictive performance.\n      </Typography>\n      <Box sx={{ height: 350 }}>\n        <Line data={chartData} options={options} />\n      </Box>\n    </Box>\n  );\n};\n\nexport default R2LearningCurveChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}