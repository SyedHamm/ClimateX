{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hamma\\\\Desktop\\\\Github Projects\\\\ClimateX\\\\frontend\\\\src\\\\components\\\\FeatureImportanceChart.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Box, useTheme } from '@mui/material';\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst FeatureImportanceChart = ({\n  data,\n  title\n}) => {\n  _s();\n  const theme = useTheme();\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No feature importance data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Sort data by importance and take top 10 most important features\n  const sortedData = [...data].sort((a, b) => b.importance - a.importance).slice(0, 10);\n\n  // Extract feature names and importance values\n  const featureNames = sortedData.map(item => item.feature);\n  const importanceValues = sortedData.map(item => item.importance);\n\n  // Generate color gradient based on importance\n  const backgroundColors = importanceValues.map((value, index) => {\n    // Create a gradient effect for visualization\n    const hue = 200; // blue\n    const saturation = 90;\n    const lightness = 60 - index * 3; // Gradually darken the colors\n    return `hsl(${hue}, ${saturation}%, ${lightness}%)`;\n  });\n\n  // Prepare chart data\n  const chartData = {\n    labels: featureNames,\n    datasets: [{\n      label: 'Feature Importance',\n      data: importanceValues,\n      backgroundColor: backgroundColors,\n      borderColor: 'rgba(54, 162, 235, 0.8)',\n      borderWidth: 1\n    }]\n  };\n\n  // Chart options\n  const options = {\n    indexAxis: 'y',\n    // Horizontal bar chart\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            const value = context.raw;\n            return `Importance: ${(value * 100).toFixed(2)}%`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Relative Importance'\n        },\n        ticks: {\n          callback: function (value) {\n            return (value * 100).toFixed(0) + '%';\n          }\n        }\n      },\n      y: {\n        grid: {\n          display: false\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: '100%',\n      width: '100%',\n      p: 1\n    },\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(FeatureImportanceChart, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n_c = FeatureImportanceChart;\nexport default FeatureImportanceChart;\nvar _c;\n$RefreshReg$(_c, \"FeatureImportanceChart\");","map":{"version":3,"names":["React","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Box","useTheme","jsxDEV","_jsxDEV","register","FeatureImportanceChart","data","title","_s","theme","length","children","fileName","_jsxFileName","lineNumber","columnNumber","sortedData","sort","a","b","importance","slice","featureNames","map","item","feature","importanceValues","backgroundColors","value","index","hue","saturation","lightness","chartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","indexAxis","responsive","plugins","legend","display","tooltip","callbacks","context","raw","toFixed","scales","x","beginAtZero","text","ticks","callback","y","grid","sx","height","width","p","_c","$RefreshReg$"],"sources":["C:/Users/hamma/Desktop/Github Projects/ClimateX/frontend/src/components/FeatureImportanceChart.js"],"sourcesContent":["import React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n} from 'chart.js';\nimport { Box, useTheme } from '@mui/material';\n\n// Register Chart.js components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst FeatureImportanceChart = ({ data, title }) => {\n  const theme = useTheme();\n  \n  if (!data || data.length === 0) {\n    return <div>No feature importance data available</div>;\n  }\n\n  // Sort data by importance and take top 10 most important features\n  const sortedData = [...data].sort((a, b) => b.importance - a.importance).slice(0, 10);\n  \n  // Extract feature names and importance values\n  const featureNames = sortedData.map(item => item.feature);\n  const importanceValues = sortedData.map(item => item.importance);\n\n  // Generate color gradient based on importance\n  const backgroundColors = importanceValues.map((value, index) => {\n    // Create a gradient effect for visualization\n    const hue = 200; // blue\n    const saturation = 90;\n    const lightness = 60 - (index * 3); // Gradually darken the colors\n    return `hsl(${hue}, ${saturation}%, ${lightness}%)`;\n  });\n\n  // Prepare chart data\n  const chartData = {\n    labels: featureNames,\n    datasets: [\n      {\n        label: 'Feature Importance',\n        data: importanceValues,\n        backgroundColor: backgroundColors,\n        borderColor: 'rgba(54, 162, 235, 0.8)',\n        borderWidth: 1\n      }\n    ]\n  };\n\n  // Chart options\n  const options = {\n    indexAxis: 'y', // Horizontal bar chart\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        callbacks: {\n          label: function(context) {\n            const value = context.raw;\n            return `Importance: ${(value * 100).toFixed(2)}%`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Relative Importance',\n        },\n        ticks: {\n          callback: function(value) {\n            return (value * 100).toFixed(0) + '%';\n          }\n        }\n      },\n      y: {\n        grid: {\n          display: false\n        }\n      }\n    }\n  };\n\n  return (\n    <Box sx={{ height: '100%', width: '100%', p: 1 }}>\n      <Bar data={chartData} options={options} />\n    </Box>\n  );\n};\n\nexport default FeatureImportanceChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}